=== /Users/cdiperi/code/caseco/caseco-website/tsconfig.node.json ===

{
  "compilerOptions": {
    "composite": true,
    "skipLibCheck": true,
    "module": "ESNext",
    "moduleResolution": "bundler",
    "allowSyntheticDefaultImports": true
  },
  "include": ["vite.config.ts"]
}


=== /Users/cdiperi/code/caseco/caseco-website/index.html ===

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
<!--    <link rel="icon" type="image/svg+xml" href="/vite.svg" />-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CASECO</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>



=== /Users/cdiperi/code/caseco/caseco-website/tailwind.config.js ===

/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        primary: '#0f172a',
        secondary: '#475569',
      },
      animation: {
        'fade-in-right': 'fadeInRight 0.3s ease-out',
      },
      keyframes: {
        fadeInRight: {
          '0%': {
            opacity: '0',
            transform: 'translateX(-10px)'
          },
          '100%': {
            opacity: '1',
            transform: 'translateX(0)'
          },
        }
      }
    },
  },
  plugins: [],
}


=== /Users/cdiperi/code/caseco/caseco-website/package.json ===

{
  "name": "caseco-website",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "lint": "eslint src --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "test": "vitest",
    "test:coverage": "vitest run --coverage",
    "format": "prettier --write \"src/**/*.{ts,tsx}\"",
    "clean": "rimraf dist",
    "prebuild": "npm run clean && npm run type-check",
    "postbuild": "echo 'Build completed successfully!'",
    "prepare": "husky install"
  },
  "dependencies": {
    "@headlessui/react": "^1.7.17",
    "aws-amplify": "^6.12.3",
    "lucide-react": "^0.294.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.20.0"
  },
  "devDependencies": {
    "@aws-amplify/backend": "^1.14.0",
    "@aws-amplify/backend-cli": "^1.4.9",
    "@types/node": "^20.17.19",
    "@types/react": "^18.2.37",
    "@types/react-dom": "^18.2.15",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vitejs/plugin-react": "^4.2.0",
    "autoprefixer": "^10.4.16",
    "aws-cdk": "^2.178.1",
    "aws-cdk-lib": "^2.178.1",
    "constructs": "^10.4.2",
    "esbuild": "^0.25.0",
    "eslint": "^8.53.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.4",
    "husky": "^8.0.3",
    "lint-staged": "^15.0.2",
    "postcss": "^8.4.31",
    "prettier": "^3.0.3",
    "rimraf": "^5.0.1",
    "tailwindcss": "^3.3.5",
    "typescript": "^5.7.3",
    "vite": "^5.0.0",
    "vitest": "^0.34.6"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}


=== /Users/cdiperi/code/caseco/caseco-website/tsconfig.json ===

{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"]
    },
    "types": ["node", "react", "react-dom"],
    "forceConsistentCasingInFileNames": true,
    "esModuleInterop": true,
    "allowJs": false,
    "checkJs": false,
    "incremental": true
  },
  "include": ["src"],
  "references": [{ "path": "./tsconfig.node.json" }]
}


=== /Users/cdiperi/code/caseco/caseco-website/vite.config.ts ===

import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './src')
    }
  },
  build: {
    sourcemap: true,
    outDir: 'dist',
    rollupOptions: {
      output: {
        manualChunks: {
          // Split vendor chunks for better caching
          vendor: ['react', 'react-dom', 'react-router-dom'],
          // Split UI components
          ui: ['@headlessui/react', 'lucide-react'],
        }
      }
    }
  },
  server: {
    port: 3000,
    open: true,
    // Add proxy configuration if needed
    // proxy: {
    //   '/api': {
    //     target: 'http://localhost:8080',
    //     changeOrigin: true,
    //   }
    // }
  }
});


=== /Users/cdiperi/code/caseco/caseco-website/postcss.config.js ===

export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}



=== /Users/cdiperi/code/caseco/caseco-website/src/App.tsx ===

import React, { Suspense } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Layout from './components/layout/Layout';
import ErrorBoundary from './components/ErrorBoundary';
import { routes } from './config/routes';

const Loading: React.FC = () => (
    <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500"></div>
    </div>
);

const App: React.FC = () => {
    return (
        <ErrorBoundary>
            <Router>
                <Layout>
                    <Suspense fallback={<Loading />}>
                        <Routes>
                            {routes.map(({ path, component: Component }) => (
                                <Route
                                    key={path}
                                    path={path}
                                    element={<Component />}
                                />
                            ))}
                        </Routes>
                    </Suspense>
                </Layout>
            </Router>
        </ErrorBoundary>
    );
};

export default App;


=== /Users/cdiperi/code/caseco/caseco-website/src/main.tsx ===

import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import './index.css';
import App from './App';

// Get the root element and add type assertion
const rootElement = document.getElementById('root');

// Add error handling for missing root element
if (!rootElement) {
    throw new Error(
        'Root element not found. The element with id "root" must exist in index.html'
    );
}

// Create root with proper typing
const root = createRoot(rootElement);

// Render app with error boundary
root.render(
    <StrictMode>
        <App />
    </StrictMode>
);

// Enable HMR for development
if (import.meta.hot) {
    import.meta.hot.accept();
}

// Report web vitals if needed
// reportWebVitals();


=== /Users/cdiperi/code/caseco/caseco-website/src/types/index.ts ===

// Base types
export interface Position {
    x: number;
    y: number;
}

export interface Product {
    name: string;
    image: string;
    link: string;
}

export interface Manufacturer {
    name: string;
    logo: string;
    website: string;
    description?: string;
    products: Product[];
}

export interface NavItem {
    title: string;
    link?: string;
    path?: string;
    subitems?: NavItem[];
    isInternal?: boolean;
}

export interface NavItems {
    [section: string]: NavItem[];
}

// Props interfaces
export interface LayoutProps {
    children: React.ReactNode;
}

export interface ProductCarouselProps {
    products: Product[];
}

export interface ProductCardProps {
    product: Product;
}

export interface ManufacturerSectionProps {
    manufacturer: Manufacturer;
}

// Config interfaces
export interface ImageUtilsConfig {
    baseUrl: string;
    environment: string;
    assetsPath: string;
}

export interface DocumentUtilsConfig {
    baseUrl: string;
    environment: string;
}

export interface EnvConfig {
    cdnUrl: string;
    environment: string;
    apiUrl: string;
}

// Route types
export interface RouteConfig {
    path: string;
    component: React.LazyExoticComponent<React.ComponentType<any>> | React.ComponentType;
    exact?: boolean;
}


=== /Users/cdiperi/code/caseco/caseco-website/src/config/routes.ts ===

import { lazy } from 'react';

export interface RouteConfig {
    path: string;
    component: React.LazyExoticComponent<React.ComponentType<any>> | React.ComponentType;
    exact?: boolean;
}

// Lazy load routes for better performance
const Home = lazy(() => import('../pages/Home'));
const About = lazy(() => import('../pages/About'));
const Buy = lazy(() => import('../pages/Buy'));
const Downloads = lazy(() => import('../pages/Downloads'));
const Links = lazy(() => import('../pages/Links'));
const TapeswitchQuickReferences = lazy(() => import('../pages/TapeswitchQuickReferences'));

export const routes: RouteConfig[] = [
    {
        path: '/',
        component: Home,
        exact: true
    },
    {
        path: '/about',
        component: About
    },
    {
        path: '/buy',
        component: Buy
    },
    {
        path: '/downloads',
        component: Downloads
    },
    {
        path: '/links',
        component: Links
    },
    {
        path: '/tapeswitch-quick-references',
        component: TapeswitchQuickReferences
    }
];

// Function to get route by path
export const getRouteByPath = (path: string): RouteConfig | undefined => {
    return routes.find(route => route.path === path);
};


=== /Users/cdiperi/code/caseco/caseco-website/src/config/env.ts ===

interface EnvConfig {
    cdnUrl: string;
    environment: string;
    apiUrl: string;
    assetsPath: string;
}

export const getEnvConfig = (): EnvConfig => {
    return {
        cdnUrl: import.meta.env.VITE_CDN_URL || '',
        environment: import.meta.env.VITE_APP_ENVIRONMENT || 'beta',
        apiUrl: import.meta.env.VITE_API_URL || '',
        assetsPath: import.meta.env.VITE_ASSETS_PATH || '/assets'
    };
};


=== /Users/cdiperi/code/caseco/caseco-website/src/utils/imageUtils.ts ===

import { getEnvConfig } from '@/config/env';
import { ImageUtilsConfig } from '@/types';

const config: ImageUtilsConfig = {
    baseUrl: getEnvConfig().cdnUrl || '',
    environment: getEnvConfig().environment || 'beta',
    assetsPath: getEnvConfig().assetsPath || '/assets'
};

export const getImageUrl = (path: string): string => {
    // If CDN URL is configured, use it with environment
    if (config.baseUrl) {
        return `${config.baseUrl}/${config.environment}/${path}`;
    }

    // Otherwise, use local assets path
    return `${config.assetsPath}/${path}`;
};


=== /Users/cdiperi/code/caseco/caseco-website/src/utils/documentUtils.ts ===

import { DocumentUtilsConfig } from '../types';

const config: DocumentUtilsConfig = {
    baseUrl: import.meta.env.VITE_CDN_URL || '',
    environment: import.meta.env.VITE_APP_ENVIRONMENT || 'beta'
};

export const getDocumentUrl = (path: string): string => {
    return `${config.baseUrl}/${config.environment}/documents/${path}`;
};


=== /Users/cdiperi/code/caseco/caseco-website/src/index.css ===

@tailwind base;
@tailwind components;
@tailwind utilities;


=== /Users/cdiperi/code/caseco/caseco-website/src/components/sections/ManufacturerSection.tsx ===

import React from 'react';
import { Manufacturer } from '../../types/manufacturer';
import { ProductCarousel } from '../carousel/ProductCarousel';

interface ManufacturerSectionProps {
    manufacturer: Manufacturer;
}

export const ManufacturerSection: React.FC<ManufacturerSectionProps> = ({ manufacturer }) => (
    <section className="mb-16">
        <div className="bg-gray-50 rounded-xl shadow-lg p-8">
            <div className="mb-8">
                <a
                    href={manufacturer.website}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="block w-full max-w-3xl mx-auto h-32 bg-white rounded-lg
                             overflow-hidden hover:shadow-md transition-all duration-300
                             border border-gray-100"
                >
                    <img
                        src={manufacturer.logo}
                        alt={`${manufacturer.name} logo`}
                        className="w-full h-full object-contain p-4"
                    />
                </a>
            </div>

            {manufacturer.description && (
                <div className="mb-8 text-center text-gray-600 max-w-3xl mx-auto">
                    <p>{manufacturer.description}</p>
                </div>
            )}

            <div className="bg-white rounded-lg p-6">
                <ProductCarousel products={manufacturer.products} />
            </div>
        </div>
    </section>
);


=== /Users/cdiperi/code/caseco/caseco-website/src/components/layout/SideNavbar.tsx ===

import React, { useState, useCallback } from 'react';
import { Link } from 'react-router-dom';
import { ChevronDown, Menu } from 'lucide-react';
import { createPortal } from 'react-dom';
import { NavItem, NavItems } from '@/types';

interface Position {
    x: number;
    y: number;
}

const SideNavbar: React.FC = () => {
    const [hoveredItem, setHoveredItem] = useState<string | null>(null);
    const [isOpen, setIsOpen] = useState<boolean>(false);
    const [submenuPosition, setSubmenuPosition] = useState<Position>({ x: 0, y: 0 });
    let hideTimeout: NodeJS.Timeout;

    const navItems: NavItems = {
        Applications: [
            { title: 'Measurement Light Curtains', link: 'https://www.reersafety.com/us/en/products/measurement-sensors/item/66-micron-en' },
            { title: 'Collision Sensing Bumpers', link: 'https://www.tapeswitch.com/bumpers.html' },
            { title: 'Controflex Ribbon Switch', link: 'https://www.tapeswitch.com/ribbon-switches.html' },
            { title: 'Electric Safety Edge Guards', link: 'https://www.tapeswitch.com/sensing-edges.html' },
            {
                title: 'Electrical Mats',
                subitems: [
                    { title: 'Tapeswitch', link: 'https://www.tapeswitch.com/safety-mats.html' },
                    { title: 'LMI', link: 'http://www.londonmat.com/mats/zone.html' }
                ],
            },
        ],
        Manufacturers: [
            { title: 'Castell', link: 'http://www.castell.com/us/castell/products.php' },
        ],
    };

    const handleMouseEnter = useCallback((event: React.MouseEvent<HTMLLIElement>, title: string): void => {
        clearTimeout(hideTimeout);
        const rect = event.currentTarget.getBoundingClientRect();
        setSubmenuPosition({
            x: rect.right,
            y: rect.top
        });
        setHoveredItem(title);
    }, []);

    const handleLinkClick = useCallback((hasSubitems?: boolean): void => {
        if (window.innerWidth < 768 && !hasSubitems) {
            setIsOpen(false);
        }
    }, []);

    const renderSubMenu = (item: NavItem): React.ReactPortal | null => {
        if (hoveredItem !== item.title || !item.subitems) return null;

        const { x, y } = submenuPosition;

        // Create a temporary div to measure submenu dimensions
        const tempDiv = document.createElement('div');
        tempDiv.style.visibility = 'hidden';
        tempDiv.style.position = 'absolute';
        tempDiv.innerHTML = `<ul>${item.subitems.map(() => '<li style="height: 32px;"></li>').join('')}</ul>`;
        document.body.appendChild(tempDiv);
        const submenuHeight = tempDiv.offsetHeight;
        const submenuWidth = tempDiv.offsetWidth;
        document.body.removeChild(tempDiv);

        // Calculate available space and positioning
        const availableSpaceBelow = window.innerHeight - y;
        const availableSpaceRight = window.innerWidth - x;
        const isMobile = window.innerWidth < 768;

        // Calculate positions
        const topPosition = availableSpaceBelow < submenuHeight && y > submenuHeight
            ? y - submenuHeight + 32 // Add offset for current item height
            : y;

        const leftPosition = isMobile || availableSpaceRight < submenuWidth
            ? Math.max(10, x - submenuWidth)
            : x;

        return createPortal(
            <ul
                style={{
                    position: 'fixed',
                    left: `${leftPosition}px`,
                    top: `${topPosition}px`,
                    maxHeight: '80vh',
                    maxWidth: '90vw'
                }}
                className="bg-white shadow-lg rounded-md p-2 transition-all duration-150 overflow-y-auto"
                onMouseEnter={() => clearTimeout(hideTimeout)}
                onMouseLeave={() => {
                    hideTimeout = setTimeout(() => setHoveredItem(null), 300);
                }}
            >
                {item.subitems.map((subitem) => (
                    <li key={subitem.title} className="py-1 px-4 hover:bg-gray-100 cursor-pointer whitespace-nowrap">
                        {subitem.isInternal ? (
                            <Link
                                to={subitem.link || ''}
                                className="block"
                                onClick={() => handleLinkClick()}
                            >
                                {subitem.title}
                            </Link>
                        ) : (
                            <a
                                href={subitem.link}
                                target="_blank"
                                rel="noopener noreferrer"
                                className="block"
                                onClick={() => handleLinkClick(!!item.subitems)}
                            >
                                {subitem.title}
                            </a>
                        )}
                    </li>
                ))}
            </ul>,
            document.body
        );
    };

    return (
        <>
            <button
                className="md:hidden p-3 bg-gray-200 w-full text-left"
                onClick={() => setIsOpen(!isOpen)}
            >
                <Menu className="h-6 w-6 inline-block" /> Products
            </button>

            <nav
                className={`
                    w-64 bg-gray-100 p-4 text-sm 
                    transition-transform transform 
                    ${isOpen ? 'translate-x-0' : '-translate-x-full'} 
                    md:translate-x-0 md:block 
                    fixed md:relative 
                    inset-0 md:inset-auto
                    md:h-auto 
                    overflow-y-auto 
                    z-50
                    pb-20 md:pb-4
                `}
            >
                {Object.entries(navItems).map(([section, items]) => (
                    <div key={section} className="mb-6">
                        <h2 className="text-lg font-semibold mb-2">{section}</h2>
                        <ul>
                            {items.map((item) => (
                                <li
                                    key={item.title}
                                    className="relative"
                                    onMouseEnter={(event) => handleMouseEnter(event, item.title)}
                                    onMouseLeave={() => {
                                        hideTimeout = setTimeout(() => setHoveredItem(null), 300);
                                    }}
                                >
                                    <div className="flex items-center py-2 px-4 hover:bg-gray-200 cursor-pointer">
                                        {item.isInternal ? (
                                            <Link
                                                to={item.link || ''}
                                                className="block flex-grow"
                                                onClick={() => handleLinkClick(false)}
                                            >
                                                {item.title}
                                            </Link>
                                        ) : (
                                            <a
                                                href={item.link}
                                                target="_blank"
                                                rel="noopener noreferrer"
                                                className="block flex-grow"
                                                onClick={() => handleLinkClick(!!item.subitems)}
                                            >
                                                {item.title}
                                            </a>
                                        )}
                                        {item.subitems && <ChevronDown className="ml-2 h-4 w-4" />}
                                    </div>
                                    {renderSubMenu(item)}
                                </li>
                            ))}
                        </ul>
                    </div>
                ))}
            </nav>
        </>
    );
};

export default SideNavbar;


=== /Users/cdiperi/code/caseco/caseco-website/src/components/layout/Footer.tsx ===

import React from 'react';

interface FooterSection {
    title: string;
    items: Array<{
        text: string;
        link?: string;
    }>;
}

const Footer: React.FC = () => {
    const footerSections: FooterSection[] = [
        {
            title: 'CASECO',
            items: [
                { text: 'Controls Automation Safety Engineering Company' },
                { text: '508 Queens Court' },
                { text: 'Franklin, TN 37064' }
            ]
        },
        {
            title: 'Contact',
            items: [
                { text: 'Phone: (615) 591-7399 [Phone/Fax]' },
                { text: 'Email: info@company.com', link: 'mailto:info@company.com' }
            ]
        },
        {
            title: 'Legal',
            items: [
                { text: 'Privacy Policy', link: '/privacy' },
                { text: 'Terms of Service', link: '/terms' }
            ]
        }
    ];

    const currentYear = new Date().getFullYear();

    const renderFooterItem = (item: FooterSection['items'][0]) => {
        if (item.link) {
            return (
                <a
                    href={item.link}
                    className="hover:text-gray-300 transition-colors"
                    {...(item.link.startsWith('mailto:') ? {} : {
                        target: '_blank',
                        rel: 'noopener noreferrer'
                    })}
                >
                    {item.text}
                </a>
            );
        }
        return <p>{item.text}</p>;
    };

    return (
        <footer className="bg-primary text-white py-6 px-4">
            <div className="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-3 gap-6 text-center md:text-left">
                {footerSections.map((section) => (
                    <div key={section.title}>
                        <h3 className="text-lg font-semibold mb-2">{section.title}</h3>
                        <div className="space-y-1">
                            {section.items.map((item, index) => (
                                <div key={index}>
                                    {renderFooterItem(item)}
                                </div>
                            ))}
                        </div>
                    </div>
                ))}
            </div>
            <div className="mt-4 pt-4 border-t border-gray-700 text-center">
                <p>&copy; 2003-{currentYear}. C.A.S.E.C.O. All Rights Reserved</p>
            </div>
        </footer>
    );
};

export default Footer;


=== /Users/cdiperi/code/caseco/caseco-website/src/components/layout/Layout.tsx ===

import React from 'react';
import TopNavbar from './TopNavbar';
import SideNavbar from './SideNavbar';
import Footer from './Footer';
import { LayoutProps } from '@/types';

const Layout: React.FC<LayoutProps> = ({ children }) => {
    return (
        <div className="min-h-screen flex flex-col">
            <TopNavbar />
            <div className="flex-1 flex">
                <div className="w-64 flex-shrink-0">
                    <SideNavbar />
                </div>
                <main className="flex-1 overflow-x-hidden">
                    {children}
                </main>
            </div>
            <Footer />
        </div>
    );
};

export default Layout;


=== /Users/cdiperi/code/caseco/caseco-website/src/components/layout/TopNavbar.tsx ===

import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { Home, Menu } from 'lucide-react';
import { NavItem } from '@/types';

interface NavLinkProps {
    item: NavItem;
    onLinkClick: () => void;
}

const NavLink: React.FC<NavLinkProps> = ({ item, onLinkClick }) => {
    const isExternal = item.path?.startsWith('http') || item.path?.startsWith('mailto:');

    if (isExternal) {
        return (
            <a
                href={item.path}
                className="px-3 py-2 rounded-md text-sm font-medium hover:bg-secondary transition-colors"
                onClick={onLinkClick}
                target={item.path?.startsWith('mailto:') ? undefined : '_blank'}
                rel={item.path?.startsWith('mailto:') ? undefined : 'noopener noreferrer'}
            >
                {item.title}
            </a>
        );
    }

    return (
        <Link
            to={item.path || '/'}
            className="px-3 py-2 rounded-md text-sm font-medium hover:bg-secondary transition-colors"
            onClick={onLinkClick}
        >
            {item.title}
        </Link>
    );
};

const TopNavbar: React.FC = () => {
    const [isOpen, setIsOpen] = useState<boolean>(false);

    const navItems: NavItem[] = [
        { title: 'Home', path: '/' },
        { title: 'Blog', path: 'https://casecoinc.wordpress.com/' },
        { title: 'News', path: '/news' },
        { title: 'Events', path: '/events' },
        { title: 'Links', path: '/links' },
        { title: 'Downloads', path: '/downloads' },
        { title: 'About Us', path: '/about' },
        { title: 'Contact Us', path: 'mailto:timdiperi@caseco-inc.com' },
        { title: 'Buy Now', path: '/buy' },
    ];

    const handleLinkClick = (): void => {
        if (window.innerWidth < 768) {
            setIsOpen(false);
        }
    };

    return (
        <nav className="bg-primary text-white shadow-lg p-4">
            <div className="flex justify-between items-center max-w-7xl mx-auto">
                <Link to="/" onClick={handleLinkClick} className="flex items-center space-x-3 hover:opacity-80 transition-opacity">
                    <Home className="h-8 w-8" />
                    <div>
                        <span className="font-bold text-xl">CASECO</span>
                        <span className="block text-sm">Controls Automation Safety Company</span>
                    </div>
                </Link>

                <button
                    className="md:hidden"
                    onClick={() => setIsOpen(!isOpen)}
                    aria-label="Toggle navigation menu"
                >
                    <Menu className="h-6 w-6" />
                </button>

                <div className="hidden md:flex space-x-4">
                    {navItems.map((item) => (
                        <NavLink
                            key={item.path}
                            item={item}
                            onLinkClick={handleLinkClick}
                        />
                    ))}
                </div>
            </div>

            {isOpen && (
                <div className="md:hidden flex flex-col items-center bg-primary p-2">
                    {navItems.map((item) => (
                        <NavLink
                            key={item.path}
                            item={item}
                            onLinkClick={handleLinkClick}
                        />
                    ))}
                </div>
            )}
        </nav>
    );
};

export default TopNavbar;


=== /Users/cdiperi/code/caseco/caseco-website/src/components/carousel/ProductCarousel.tsx ===

import React, { useState, useEffect } from 'react';
import { ChevronLeft, ChevronRight } from 'lucide-react';
import { Product } from '@/types';
import { ProductCard } from './ProductCard';

interface ProductCarouselProps {
    products: Product[];
}

export const ProductCarousel: React.FC<ProductCarouselProps> = ({ products }) => {
    const [currentIndex, setCurrentIndex] = useState(0);
    const [isHovered, setIsHovered] = useState(false);
    const cardWidth = 256;
    const gap = 24;
    const [visibleCards, setVisibleCards] = useState(3);

    useEffect(() => {
        const updateVisibleCards = () => {
            const containerWidth = window.innerWidth - 48;
            const cards = Math.floor(containerWidth / (cardWidth + gap));
            setVisibleCards(Math.max(1, cards));
        };

        updateVisibleCards();
        window.addEventListener('resize', updateVisibleCards);
        return () => window.removeEventListener('resize', updateVisibleCards);
    }, []);

    const maxIndex = Math.max(0, products.length - visibleCards);

    useEffect(() => {
        if (!isHovered) {
            const interval = setInterval(() => {
                setCurrentIndex(prev => prev >= maxIndex ? 0 : prev + 1);
            }, 2700);
            return () => clearInterval(interval);
        }
    }, [isHovered, maxIndex]);

    return (
        <div
            className="relative"
            onMouseEnter={() => setIsHovered(true)}
            onMouseLeave={() => setIsHovered(false)}
        >
            <div className="overflow-hidden px-1 py-3">
                <div
                    className="flex gap-6 duration-500 ease-out transition-transform"
                    style={{
                        transform: `translateX(-${currentIndex * (cardWidth + gap)}px)`,
                    }}
                >
                    {products.map((product, index) => (
                        <ProductCard key={index} product={product} />
                    ))}
                </div>
            </div>

            {products.length > visibleCards && (
                <>
                    <button
                        onClick={() => setCurrentIndex(prev => Math.max(0, prev - 1))}
                        className={`absolute left-0 top-1/2 -translate-y-1/2 p-2 bg-white/90 rounded-full shadow-lg -ml-4
                                  hover:bg-white transition-colors ${currentIndex === 0 ? 'opacity-0' : 'opacity-0 group-hover:opacity-100'}`}
                        disabled={currentIndex === 0}
                    >
                        <ChevronLeft className="w-6 h-6 text-gray-700" />
                    </button>

                    <button
                        onClick={() => setCurrentIndex(prev => prev >= maxIndex ? 0 : prev + 1)}
                        className={`absolute right-0 top-1/2 -translate-y-1/2 p-2 bg-white/90 rounded-full shadow-lg -mr-4
                                  hover:bg-white transition-colors ${currentIndex >= maxIndex ? 'opacity-0' : 'opacity-0 group-hover:opacity-100'}`}
                        disabled={currentIndex >= maxIndex}
                    >
                        <ChevronRight className="w-6 h-6 text-gray-700" />
                    </button>
                </>
            )}
        </div>
    );
};


=== /Users/cdiperi/code/caseco/caseco-website/src/components/carousel/ProductCard.tsx ===

import React from 'react';
import { ExternalLink } from 'lucide-react';
import { Product } from '@/types';

interface ProductCardProps {
    product: Product;
}

export const ProductCard: React.FC<ProductCardProps> = ({ product }) => (
    <a
        href={product.link}
        target="_blank"
        rel="noopener noreferrer"
        className="flex-none w-64 bg-white rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 group"
    >
        <div className="aspect-[4/3] bg-gray-50">
            <img
                src={product.image}
                alt={product.name}
                className="w-full h-full object-contain p-4 transition-transform duration-300 group-hover:scale-105"
            />
        </div>
        <div className="p-4 flex items-center justify-between">
            <h3 className="font-medium text-gray-900 line-clamp-2 flex-1 mr-2 min-h-[48px]">
                {product.name}
            </h3>
            <ExternalLink className="w-4 h-4 text-gray-500 group-hover:text-blue-600 flex-shrink-0" />
        </div>
    </a>
);


=== /Users/cdiperi/code/caseco/caseco-website/src/components/ErrorBoundary.tsx ===

import { Component, ErrorInfo, ReactNode } from 'react';

interface Props {
    children: ReactNode;
}

interface State {
    hasError: boolean;
    error: Error | null;
    errorInfo: ErrorInfo | null;
}

class ErrorBoundary extends Component<Props, State> {
    constructor(props: Props) {
        super(props);
        this.state = {
            hasError: false,
            error: null,
            errorInfo: null
        };
    }

    static getDerivedStateFromError(error: Error): State {
        return {
            hasError: true,
            error,
            errorInfo: null
        };
    }

    componentDidCatch(error: Error, errorInfo: ErrorInfo): void {
        console.error('Error caught by boundary:', error, errorInfo);
        this.setState({
            error,
            errorInfo
        });
    }

    render(): ReactNode {
        if (this.state.hasError) {
            return (
                <div className="min-h-screen flex items-center justify-center bg-gray-100">
                    <div className="text-center p-8 bg-white rounded-lg shadow-lg">
                        <h1 className="text-2xl font-bold text-red-600 mb-4">Something went wrong</h1>
                        <p className="text-gray-600 mb-4">
                            We're sorry, but there was an error loading this page.
                        </p>
                        <button
                            onClick={() => window.location.reload()}
                            className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
                        >
                            Reload Page
                        </button>
                    </div>
                </div>
            );
        }

        return this.props.children;
    }
}

export default ErrorBoundary;


=== /Users/cdiperi/code/caseco/caseco-website/src/vite-env.d.ts ===

/// <reference types="vite/client" />

interface ImportMetaEnv {
    readonly VITE_CDN_URL: string
    readonly VITE_APP_ENVIRONMENT: 'beta' | 'prod'
    readonly VITE_API_URL: string
}

interface ImportMeta {
    readonly env: ImportMetaEnv
}


=== /Users/cdiperi/code/caseco/caseco-website/src/data/manufacturers.ts ===

import { Manufacturer } from '@/types';
import { getImageUrl } from '../utils/imageUtils';

// Helper function to get manufacturer-specific image paths
const getMfgImageUrl = (manufacturer: string, imageName: string): string => {
    return getImageUrl(`images/${manufacturer}/${imageName}`);
};

export const manufacturers: Manufacturer[] = [
    {
        name: "Micro-Epsilon",
        logo: getMfgImageUrl('micro-epsilon', 'micro-epsilon_logo.svg'),
        website: "https://www.micro-epsilon.com/",
        description: "Leading manufacturer of high-precision sensors, measurement devices and systems for dimensional measurement, inspection and automation.",
        products: (() => {
            // Create a closure with the manufacturer name for cleaner code
            const getImage = (imageName: string) => getMfgImageUrl('micro-epsilon', imageName);

            return [
                {
                    name: "Inductive Sensor Systems",
                    image: getImage('eddyncdt-3300.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/inductive-sensors-eddy-current/eddyncdt-3300/"
                },
                {
                    name: "Rotational Speed Sensors",
                    image: getImage('rotational-speed-sensors.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/inclination-acceleration-sensors/rotation-speed-sensors/"
                },
                {
                    name: "Laser Displacement Sensors",
                    image: getImage('optoncdt-1900.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/laser-sensors/optoncdt-1900/"
                },
                {
                    name: "Thermal Imaging Cameras",
                    image: getImage('thermal-imaging-cameras.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/temperature-sensors/thermal-imaging-cameras/"
                },
                {
                    name: "High Speed Photospectrometers",
                    image: getImage('color-measuring-systems.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/color-sensors/color-measuring-systems/"
                },
                {
                    name: "Confocal Chromatic Sensor Systems",
                    image: getImage('confocal-chromatic-sensor-system.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/confocal-sensors/confocaldt-ifd2410-2415/"
                },
                {
                    name: "Infared Pyrometers with Integrated Controller",
                    image: getImage('pyrometer-with-integrated-controller.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/temperature-sensors/pyrometer-with-integrated-controller-cs/"
                },
                {
                    name: "Optocontrol CLS1000",
                    image: getImage('optocontrol-CLS1000.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/fiber-optic-sensors/controller-optocontrol-cls1000/"
                },
                {
                    name: "White Light Interferometers",
                    image: getImage('white-light-interferometer.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/interferometers/5600-ds/"
                },
                {
                    name: "3D Sensors for Surface Inspections",
                    image: getImage('surface-control-sensors.png'),
                    link: "https://www.micro-epsilon.com/2d-3d-measurement/3d-sensors/surfacecontrol/"
                },
                {
                    name: "Intelligent Spotfinder Pyrometers",
                    image: getImage('intelligent-spoftfine-pyrometer.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/temperature-sensors/pyrometer-with-spotfinder-tim-8/"
                },
                {
                    name: "Laser Distance Sensors",
                    image: getImage('optoncdt-ilr2250.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/laser-distance-sensors/optoncdt-ilr2250/"
                },
                {
                    name: "3D Sensors for Shiny Surface Inspections",
                    image: getImage('reflect-control.png'),
                    link: "https://www.micro-epsilon.com/2d-3d-measurement/3d-sensors/reflectcontrol/"
                },
                {
                    name: "IF2035 Interace Modules for Ethernet Connections",
                    image: getImage('if2035-for-industrial-ethernet.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/interfaces/if2035-for-industrial-ethernet/"
                },
                {
                    name: "Indusensor LVDT Gauges",
                    image: getImage('indusensor-dta-gauge.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/inductive-sensors-lvdt/indusensor-dta-gauge/"
                },
                {
                    name: "High-Performance Laser Scanners",
                    image: getImage('scancontrol-30x0.png'),
                    link: "https://www.micro-epsilon.com/2d-3d-measurement/laser-profile-scanners/scancontrol-30x0/"
                },
                {
                    name: "Magneto-Inductive Displacement Sensors",
                    image: getImage('mainsensor-mds-35-45.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/magneto-inductive-sensors/mainsensor-mds-35-45/"
                },
                {
                    name: "High Performance Micrometers",
                    image: getImage('optocontrol-2700.png'),
                    link: "https://www.micro-epsilon.com/2d-3d-measurement/optical-micrometer/optocontrol-2700/"
                },
                {
                    name: "String-Potentiometer Mechanics",
                    image: getImage('draw-wire-sensors-mechanics.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/draw-wire-sensors/mechanics/"
                },
            ];
        })()
    },
    {
        name: "Tapeswitch",
        logo: getMfgImageUrl('tapeswitch', 'tapeswitch-logo.png'),
        website: "https://www.tapeswitch.com/index.html",
        description: "Leading provider of safety products and pressure sensitive switches, specializing in safety mats, sensing edges, ribbon switches, and control systems designed to protect workers and meet industrial safety regulations.",
        products: (() => {
            // Create a closure with the manufacturer name for cleaner code
            const getImage = (imageName: string) => getMfgImageUrl('micro-epsilon', imageName);

            return [
                {
                    name: "Inductive Sensor Systems",
                    image: getImage('eddyncdt-3300.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/inductive-sensors-eddy-current/eddyncdt-3300/"
                },
                {
                    name: "Rotational Speed Sensors",
                    image: getImage('rotational-speed-sensors.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/inclination-acceleration-sensors/rotation-speed-sensors/"
                },
                {
                    name: "Laser Displacement Sensors",
                    image: getImage('optoncdt-1900.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/laser-sensors/optoncdt-1900/"
                },
                {
                    name: "Thermal Imaging Cameras",
                    image: getImage('thermal-imaging-cameras.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/temperature-sensors/thermal-imaging-cameras/"
                },
                {
                    name: "High Speed Photospectrometers",
                    image: getImage('color-measuring-systems.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/color-sensors/color-measuring-systems/"
                },
                {
                    name: "Confocal Chromatic Sensor Systems",
                    image: getImage('confocal-chromatic-sensor-system.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/confocal-sensors/confocaldt-ifd2410-2415/"
                },
                {
                    name: "Infared Pyrometers with Integrated Controller",
                    image: getImage('pyrometer-with-integrated-controller.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/temperature-sensors/pyrometer-with-integrated-controller-cs/"
                },
                {
                    name: "Optocontrol CLS1000",
                    image: getImage('optocontrol-CLS1000.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/fiber-optic-sensors/controller-optocontrol-cls1000/"
                },
                {
                    name: "White Light Interferometers",
                    image: getImage('white-light-interferometer.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/interferometers/5600-ds/"
                },
                {
                    name: "3D Sensors for Surface Inspections",
                    image: getImage('surface-control-sensors.png'),
                    link: "https://www.micro-epsilon.com/2d-3d-measurement/3d-sensors/surfacecontrol/"
                },
                {
                    name: "Intelligent Spotfinder Pyrometers",
                    image: getImage('intelligent-spoftfine-pyrometer.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/temperature-sensors/pyrometer-with-spotfinder-tim-8/"
                },
                {
                    name: "Laser Distance Sensors",
                    image: getImage('optoncdt-ilr2250.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/laser-distance-sensors/optoncdt-ilr2250/"
                },
                {
                    name: "3D Sensors for Shiny Surface Inspections",
                    image: getImage('reflect-control.png'),
                    link: "https://www.micro-epsilon.com/2d-3d-measurement/3d-sensors/reflectcontrol/"
                },
                {
                    name: "IF2035 Interace Modules for Ethernet Connections",
                    image: getImage('if2035-for-industrial-ethernet.png'),
                    link: "https://www.micro-epsilon.com/industry-sensors/interfaces/if2035-for-industrial-ethernet/"
                },
                {
                    name: "Indusensor LVDT Gauges",
                    image: getImage('indusensor-dta-gauge.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/inductive-sensors-lvdt/indusensor-dta-gauge/"
                },
                {
                    name: "High-Performance Laser Scanners",
                    image: getImage('scancontrol-30x0.png'),
                    link: "https://www.micro-epsilon.com/2d-3d-measurement/laser-profile-scanners/scancontrol-30x0/"
                },
                {
                    name: "Magneto-Inductive Displacement Sensors",
                    image: getImage('mainsensor-mds-35-45.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/magneto-inductive-sensors/mainsensor-mds-35-45/"
                },
                {
                    name: "High Performance Micrometers",
                    image: getImage('optocontrol-2700.png'),
                    link: "https://www.micro-epsilon.com/2d-3d-measurement/optical-micrometer/optocontrol-2700/"
                },
                {
                    name: "String-Potentiometer Mechanics",
                    image: getImage('draw-wire-sensors-mechanics.png'),
                    link: "https://www.micro-epsilon.com/distance-sensors/draw-wire-sensors/mechanics/"
                },
            ];
        })()
    },
    // Additional manufacturers would go here...
];


=== /Users/cdiperi/code/caseco/caseco-website/src/pages/Buy.tsx ===

import React from 'react';

const Buy: React.FC = () => {
    return (
        <div className="container mx-auto p-6">
            <div className="bg-black text-white py-4 mb-8 text-center">
                <h1 className="text-2xl font-bold">BUY NOW</h1>
            </div>

            <div className="max-w-2xl mx-auto">
                <ul className="space-y-4">
                    <li>
                        <a
                            href="http://www.tapeswitch.com/store/"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline text-lg block p-3 rounded-lg hover:bg-gray-50 transition-colors"
                        >
                            Tapeswitch
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.tapeswitch.com/store/products.php?cat=Safety+and+Signal+Mats"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline text-lg block p-3 rounded-lg hover:bg-gray-50 transition-colors"
                        >
                            Safety Mats
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.tapeswitch.com/store/products.php?cat=Non-contact+Interlocks"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline text-lg block p-3 rounded-lg hover:bg-gray-50 transition-colors"
                        >
                            Safety Interlocks
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.tapeswitch.com/store/products.php?cat=Sensing+Edges"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline text-lg block p-3 rounded-lg hover:bg-gray-50 transition-colors"
                        >
                            Safety Edges
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.tapeswitch.com/store/products.php?cat=Interface+Controllers"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline text-lg block p-3 rounded-lg hover:bg-gray-50 transition-colors"
                        >
                            Interface Controllers
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    );
};

export default Buy;


=== /Users/cdiperi/code/caseco/caseco-website/src/pages/Home.tsx ===

import React from 'react';
import { manufacturers } from '../data/manufacturers';
import { ManufacturerSection } from '../components/sections/ManufacturerSection';

const Home: React.FC = () => {
    return (
        <div className="p-6">
            <div className="space-y-16">
                {manufacturers.map((manufacturer, index) => (
                    <ManufacturerSection
                        key={`${manufacturer.name}-${index}`}
                        manufacturer={manufacturer}
                    />
                ))}
            </div>
        </div>
    );
};

export default Home;


=== /Users/cdiperi/code/caseco/caseco-website/src/pages/Downloads.tsx ===

import React from 'react';
import { getDocumentUrl } from '../utils/documentUtils.ts';

const Downloads: React.FC = () => {
    return (
        <div className="container mx-auto p-6">
            <h1 className="text-3xl font-bold mb-8">Downloads</h1>

            <section className="mb-8">
                <h2 className="text-xl font-bold mb-4">Technical Documentation</h2>
                <ul className="space-y-2 list-disc ml-6">
                    <li>
                        <a
                            href="https://www.dguv.de/ifa/praxishilfen/praxishilfen-maschinenschutz/software-sistema/sistema-bibliotheken/index.jsp"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            SISTEMA Software
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.reersafety.com/pdf/cataloghi/Safety_Guide_ENG.pdf"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Introduction to Safety
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.reersafety.com/calcolo-distanza-di-sicurezza/index.php?lang=en"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Distance of Light Curtain from Point
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.reersafety.com/calcolo-distanza-di-sicurezza/index.php?lang=en"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Distance at a Specific Angle
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.micro-epsilon.com/temperature-sensors/thermoIMAGER/optics/"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Thermal Imager Optics Calculator
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.micro-epsilon.com/measurement-systems/"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Turn Key Inspection Systems
                        </a>
                    </li>
                </ul>
            </section>

            <section className="mb-8">
                <h2 className="text-xl font-bold mb-4">Catalogs</h2>
                <ul className="space-y-2 list-disc ml-6">
                    <li>
                        <a
                            href={getDocumentUrl('catalogs/full_product_sheet.pdf')}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Full Product Sheet
                        </a>
                    </li>
                    <li>
                        <a
                            href={getDocumentUrl('catalogs/bumper_product_sheet.pdf')}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Bumper Product Sheet
                        </a>
                    </li>
                    <li>
                        <a
                            href={getDocumentUrl('catalogs/mat_product_sheet.pdf')}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Mat Product Sheet
                        </a>
                    </li>
                    <li>
                        <a
                            href={getDocumentUrl('catalogs/light_curtain_product_sheet.pdf')}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Light Curtain Product Sheet
                        </a>
                    </li>
                    <li>
                        <a
                            href={getDocumentUrl('catalogs/edge_product_sheet.pdf')}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Edge Product Sheet
                        </a>
                    </li>
                    <li>
                        <a
                            href={getDocumentUrl('catalogs/dpm_mats_overview.pdf')}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            DPM Mats Overview
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.pizzato.com/media/images/catalog/category/attachment/ZE_GCS03A18-ENG.pdf"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Full Pizzato Catalog
                        </a>
                    </li>
                    <li>
                        <a
                            href={getDocumentUrl('catalogs/safegate_overview.pdf')}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            SafeGate Overview
                        </a>
                    </li>
                    <li>
                        <a
                            href={getDocumentUrl('catalogs/safegate_brochure.pdf')}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            SafeGate Brochure
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.pizzatousa.com/catalog/position-switches/index.php"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Microswitches MK series
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.pizzatousa.com/catalog/safety-devices/safety-switches-for-hinged-doors.php"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Safety hinged switches, Palladio series
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.pizzatousa.com/catalog/position-switches/switches-for-special-applications.php"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Position switches for high temperature
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.pizzatousa.com/catalog/safety-devices/magnetic-safety-sensors.php"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Coded magnetic sensors SR series
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.pizzatousa.com/catalog/safety-devices/safety-switches-with-separate-actuator-and-lock.php"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Safety switches with solenoid FG series
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.pizzatousa.com/catalog/safety-devices/rope-safety-switches.php"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Accessories for rope safety switches, FAST line
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.pizzatousa.com/catalog/safety-devices/safety-switches-with-separate-actuator.php"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Safety switches with separate actuator, FW series
                        </a>
                    </li>
                </ul>
            </section>

            <section className="mb-8">
                <h2 className="text-xl font-bold mb-4">Presentations</h2>
                <ul className="space-y-2 list-disc ml-6">
                    <li>
                        <a
                            href={getDocumentUrl('presentations/the_muting_functions.pptx')}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            The Muting Function
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.reersafety.com/pdf/Presentazioni/Mosaic_ENG.pdf"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            MOSAIC Safety Systems
                        </a>
                    </li>
                    <li>
                        <a
                            href="https://www.reersafety.com/pdf/Presentazioni/Micron_ENG.pdf"
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Micron Measurement Overview
                        </a>
                    </li>
                    <li>
                        <a
                            href={getDocumentUrl('presentations/calculating_minimum_safety_distances.pps')}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="text-blue-600 hover:underline"
                        >
                            Calculating Minimum Safety Distances
                        </a>
                    </li>
                </ul>
            </section>
        </div>
    );
};

export default Downloads;


=== /Users/cdiperi/code/caseco/caseco-website/src/pages/Links.tsx ===

import React from 'react';

const Links: React.FC = () => {
    return (
        <div className="container mx-auto p-6">
            <section className="mb-8">
                <h2 className="text-xl font-bold mb-4">Government Links</h2>
                <ul className="list-disc ml-6 space-y-2">
                    <li><a href="http://www.osha.gov/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">O.S.H.A.</a></li>
                    <li><a href="http://www.epa.gov/oppfead1/safety/workers/workers.htm" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Worker Protection Standard (EPA)</a></li>
                </ul>
            </section>

            <section className="mb-8">
                <h2 className="text-xl font-bold mb-4">Trade Associations</h2>
                <ul className="list-disc ml-6 space-y-2">
                    <li><a href="http://www.naspweb.com/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">The National Association of Safety Professionals</a></li>
                    <li><a href="http://www.safetycentral.org" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Safety Equipment Distributors Association</a></li>
                    <li><a href="http://www.nsc.org" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">National Safety Council</a></li>
                    <li><a href="http://www.ida-assoc.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Industrial Distribution Association</a></li>
                    <li><a href="http://www.stafda.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Specialty Tool and Fastener Distributors Association</a></li>
                    <li><a href="http://www.ptda.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Power Transmission Distributors Association</a></li>
                    <li><a href="http://www.nfda-fastener.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">National Fastener Distributors Association</a></li>
                    <li><a href="http://www.nahad.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">National Association of Hose and Accessories Distributors</a></li>
                    <li><a href="http://www.fpda.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Fluid Power Distributors Association</a></li>
                    <li><a href="http://www.bsahome.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Bearing Specialists Association</a></li>
                    <li><a href="http://www.nemra.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">National Electrical Manufacturers Representatives Association</a></li>
                    <li><a href="http://www.bicsi.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline" title="Serving telephone company building industry consultants">BICSI - A Telecommunication Association</a></li>
                    <li><a href="http://www.nema.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">National Electrical Manufacturers Association</a></li>
                    <li><a href="http://www.nfpa.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">National Fire Protection Association</a></li>
                    <li><a href="http://www.ul.com/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Underwriters Laboratories</a></li>
                    <li><a href="http://www.naed.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">National Association of Electrical Distributors</a></li>
                    <li><a href="http://www.necanet.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">National Electrical Contractors Association</a></li>
                    <li><a href="http://www.naw.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">National Association of Wholesaler-Distributors</a></li>
                    <li><a href="http://www.nam.org/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">National Association of Manufacturers</a></li>
                </ul>
            </section>

            <section className="mb-8">
                <h2 className="text-xl font-bold mb-4">Trade Journals</h2>
                <ul className="list-disc ml-6 space-y-2">
                    <li><a href="http://www.inddest.com/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline" title="The complete resource for distribution professionals">Industrial Distribution</a></li>
                    <li><a href="http://www.progressivedistributor.com/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Progressive Distributor</a></li>
                    <li><a href="http://www.motionsystemdesign.com" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline" title="Written for the informational needs of motion systems distributors, helping them add value in the industrial supply chain.">The Motion Systems Distributor</a></li>
                    <li><a href="http://www.tedmag.com/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline" title="Focuses on sales, service, and product education">TED The Electrical Distributor</a></li>
                </ul>
            </section>

            <section className="mb-8">
                <h2 className="text-xl font-bold mb-4">Commercial Links</h2>
                <ul className="list-disc ml-6 space-y-2">
                    <li><a href="http://www.motim.net/" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Motim LLC</a></li>
                    <li><a href="http://www.ida-assoc.org" target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">Industrial Distributors Association</a></li>
                </ul>
            </section>
        </div>
    );
};

export default Links;


=== /Users/cdiperi/code/caseco/caseco-website/src/pages/TapeswitchQuickReferences.tsx ===

import React from 'react';

const TapeswitchQuickReferences: React.FC = () => {
    return (
        <div className="container mx-auto p-6">
            <h1 className="text-2xl font-bold mb-4">Tapeswitch Quick References</h1>
            <p>This page contains quick reference materials for Tapeswitch products.</p>

            <ul className="list-disc ml-6 mt-4">
                <li><a href="/docs/tapeswitch-product-guide.pdf" target="_blank" rel="noopener noreferrer" className="text-blue-500 underline">Tapeswitch Product Guide (PDF)</a></li>
                <li><a href="/docs/tapeswitch-safety-manual.pdf" target="_blank" rel="noopener noreferrer" className="text-blue-500 underline">Tapeswitch Safety Manual</a></li>
                <li><a href="/docs/tapeswitch-troubleshooting.pdf" target="_blank" rel="noopener noreferrer" className="text-blue-500 underline">Troubleshooting Guide</a></li>
            </ul>
        </div>
    );
};

export default TapeswitchQuickReferences;



=== /Users/cdiperi/code/caseco/caseco-website/src/pages/About.tsx ===

import React from 'react';

const About: React.FC = () => {
    return (
        <div className="container mx-auto p-6 max-w-4xl">
            <section className="mb-12">
                <h1 className="text-3xl font-bold mb-6">About CASECO, Inc.</h1>

                <div className="space-y-6">
                    <p className="text-lg">
                        <span className="font-bold text-red-600">CASECO</span> is the exclusive
                        agent for high quality product lines focusing on safe automation in the
                        industrial workplace. One of the aims of{' '}
                        <span className="font-bold text-red-600">CASECO</span> is to improve
                        productivity while implementing current safety requirements.{' '}
                        <span className="font-bold text-red-600">CASECO</span> can provide
                        solutions either as a total package solution or simply provide an
                        elemental solution to a particular issue.
                    </p>

                    <p className="text-lg">
                        <span className="font-bold text-red-600">CASECO</span> is dedicated
                        to providing its customers with unique, high quality solutions.
                    </p>
                </div>
            </section>

            <section className="mb-12">
                <h2 className="text-2xl font-bold mb-6">Management</h2>

                <div className="space-y-6">
                    <p className="text-lg">
                        The company is owned and operated by{' '}
                        <a
                            href="mailto:timdiperi@caseco-inc.com"
                            className="text-blue-600 hover:underline"
                        >
                            Tim DiPeri
                        </a>
                        , an Electrical Engineer with a long history of developing creative
                        solutions to address his clients' problems.
                    </p>

                    <p className="text-lg">
                        He is a pilot with a commercial rating and competes nationally in
                        radio controlled helicopter skill events.
                    </p>

                    <p className="text-lg">
                        In his off time he enjoys sports activities and participating in a
                        number of community service activities, including being an active
                        board member of his church ministry. He is a father of three and
                        enjoys spending quality time with his wife and children.
                    </p>
                </div>
            </section>
        </div>
    );
};

export default About;


